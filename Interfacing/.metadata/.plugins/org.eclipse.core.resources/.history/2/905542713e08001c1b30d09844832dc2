#include "../../LIB/Bit_Operations.h"
#include "../../LIB/Datatypes.h"

#include "ADC_Config.h"
#include "ADC_Interface.h"
#include "ADC_Private.h"

/*For Fixed options*/
void ADC_VidInit(){
	/*Reference Selection Bit*/
	/*AVCC Reference*/
	Set_Bit(ADMUX,ADMUX_REFS0);
	CLR_Bit(ADMUX,ADMUX_REFS1);

	/*ADLAR to read 8-Bits data as if it's 8-bits only*/
	Set_Bit(ADMUX,ADMUX_ADLAR);

	/*Prescaler 128*/
	Set_Bit(ADCSRA,ADCSRA_ADPS0);
	Set_Bit(ADCSRA,ADCSRA_ADPS1);
	Set_Bit(ADCSRA,ADCSRA_ADPS2);

	/*Enable Module*/
	Set_Bit(ADCSRA,ADCSRA_ADEN);
}

u8 ADC_u8ReadChannel(u8 Copy_u8Channel){
	/*choose Channel*/
	/*CLR first 5 Bits*/
	ADMUX &= 0b11100000;
	/*Select Channel to read from - ADC0 to ADC7*/
	ADMUX |= Copy_u8Channel;

	/*Start Conversion*/
	Set_Bit(ADCSRA,ADCSRA_ADSC);

	/* Wait Till Conversion is Over*/
	while(!Get_Bit(ADCSRA,ADCSRA_ADIF));

	/*Clear Flag by setting logical 1*/
	Set_Bit(ADCSRA,ADCSRA_ADIF);

	/*Return the value*/
	return ADCH;
}

u16 ADC_VidMapping(u16 Copy_u16Value,u16 Copy_u16From_Min,u16 Copy_u16From_Max,u16 Copy_u16To_Min,u16 Copy_u16To_Max ){
		u32 Local_u32Temp = (Copy_u16Value-Copy_u16From_Min)  * (Copy_u16To_Max - Copy_u16To_Min);
	  return ( Local_u32Temp / (Copy_u16From_Max - Copy_u16From_Min) ) + Copy_u16To_Min;

}
u16 ADC_f32LCDVoltConv(u8 Copy_Reading){
	u16 newreading = (Copy_Reading*(5000/256UL));
	return newreading;

}

